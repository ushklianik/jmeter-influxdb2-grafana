{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "JMeter dashboard for Influxdb2 datasource",
  "editable": true,
  "gnetId": 9561,
  "graphTooltip": 1,
  "id": 32,
  "iteration": 1632914762817,
  "links": [],
  "panels": [
    {
      "columns": [],
      "datasource": "InfluxDB",
      "editable": true,
      "error": false,
      "fontSize": "90%",
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "height": "300",
      "id": 34,
      "links": [],
      "pageSize": 50,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": true
      },
      "styles": [
        {
          "$$hashKey": "object:175",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkUrl": "${__cell}",
          "mappingType": 1,
          "pattern": "dashboard",
          "sanitize": true,
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "$$hashKey": "object:210",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "duration",
          "thresholds": [],
          "type": "number",
          "unit": "ns"
        },
        {
          "$$hashKey": "object:240",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "startTime",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"strings\"\r\n\r\ndata = from(bucket: \"jmeter\")\r\n  |> range(start: 0, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"samples\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"threads\")\r\n  |> keep(columns: [\"_time\", \"_value\", \"testId\", \"testProfile\"])\r\n  |> group(columns: [\"testId\", \"testProfile\"])\r\n\r\nmaxThreads = data \r\n  |> max(column: \"_value\")\r\n  |> keep(columns: [\"_value\", \"testId\", \"testProfile\"])\r\n  |> group(columns: [\"_value\", \"testId\", \"testProfile\"])\r\n  |> rename(columns: {_value: \"maxThreads\"})\r\n\r\nendTime = data \r\n  |> max(column: \"_time\")\r\n  |> keep(columns: [\"_time\", \"testId\", \"testProfile\"])\r\n  |> group(columns: [\"_time\", \"testId\", \"testProfile\"])\r\n  |> rename(columns: {_time: \"endTime\"})\r\n\r\nstartTime = data \r\n  |> min(column: \"_time\")\r\n  |> keep(columns: [\"_time\", \"testId\", \"testProfile\"])\r\n  |> group(columns: [\"_time\", \"testId\", \"testProfile\"])\r\n  |> rename(columns: {_time: \"startTime\"})\r\n\r\njoin1 = join(tables: {d1: maxThreads, d2: startTime}, on: [\"testId\", \"testProfile\"])\r\n  |> keep(columns: [\"startTime\",\"testId\", \"testProfile\",  \"maxThreads\"])\r\n  |> group(columns: [\"testId\", \"testProfile\"])\r\n\r\njoin(tables: {d1: join1, d2: endTime}, on: [\"testId\", \"testProfile\"])\r\n  |> map(fn: (r) => ({ r with duration: (int(v: r.endTime) - int(v: r.startTime))}))\r\n  |> map(fn: (r) => ({ r with dashboard: strings.joinStr(arr: [\r\n      \"<a href=\\\"d/jmeter-test-results/jmeter-test-results?orgId=1&from=\",\r\n      string(v: int(v: r.startTime)/1000000),\"&to=\",\r\n      string(v: int(v: r.endTime)/1000000),\"&var-aggregation=60&var-sampleType=transaction&var-testId=\",  \r\n      string(v: r.testId),\"&var-testProfile=\",string(v: r.testProfile),\"\\\">Dashboard</a>\"\r\n      ], \r\n      v: \"\") }))\r\n  |> keep(columns: [\"startTime\",\"testId\", \"testProfile\",  \"maxThreads\", \"duration\", \"dashboard\"])\r\n  |> group(columns: [\"1\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Test log",
      "transform": "table",
      "type": "table-old"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 2000,
            "axisSoftMin": 0,
            "fillOpacity": 77,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 0
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 9,
        "x": 12,
        "y": 0
      },
      "id": 37,
      "options": {
        "barWidth": 0.97,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "orientation": "vertical",
        "showValue": "always",
        "stacking": "none",
        "text": {},
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": " from(bucket: v.bucket)\r\n  |> range(start: 0, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tests\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"avg_tr\")\r\n  |> filter(fn: (r) => r[\"testProfile\"] == \"${testProfile}\") \r\n  |> toFloat() \r\n  |> keep(columns: [\"testId\", \"_value\"])\r\n  |> group()\r\n",
          "refId": "A"
        }
      ],
      "title": "Average response time",
      "type": "barchart"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 18,
        "w": 3,
        "x": 21,
        "y": 0
      },
      "id": 30,
      "links": [],
      "options": {
        "folderId": 0,
        "maxItems": 30,
        "query": "",
        "showHeadings": true,
        "showRecentlyViewed": true,
        "showSearch": false,
        "showStarred": true,
        "tags": []
      },
      "pluginVersion": "8.1.2",
      "tags": [],
      "title": "Dashboards",
      "type": "dashlist"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 2000,
            "axisSoftMin": 0,
            "fillOpacity": 77,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 0
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 9,
        "x": 12,
        "y": 9
      },
      "id": 38,
      "options": {
        "barWidth": 0.97,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "orientation": "vertical",
        "showValue": "always",
        "stacking": "none",
        "text": {},
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.1.2",
      "targets": [
        {
          "query": " from(bucket: v.bucket)\r\n  |> range(start: 0, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tests\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"median_tr\")\r\n  |> filter(fn: (r) => r[\"testProfile\"] == \"${testProfile}\") \r\n  |> toFloat() \r\n  |> keep(columns: [\"testId\", \"_value\"])\r\n  |> group()\r\n",
          "refId": "A"
        }
      ],
      "title": "Median response time",
      "type": "barchart"
    },
    {
      "columns": [],
      "datasource": "InfluxDB",
      "editable": true,
      "error": false,
      "fontSize": "90%",
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 11
      },
      "height": "300",
      "id": 35,
      "links": [],
      "pageSize": 50,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": true
      },
      "styles": [
        {
          "$$hashKey": "object:175",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkUrl": "${__cell}",
          "mappingType": 1,
          "pattern": "dashboard",
          "sanitize": true,
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "$$hashKey": "object:210",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "duration",
          "thresholds": [],
          "type": "number",
          "unit": "ns"
        },
        {
          "$$hashKey": "object:240",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "startTime",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"strings\"\r\n\r\nfrom(bucket: \"jmeter\")\r\n  |> range(start: 0, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tests\")\r\n  |> map(fn:(r) => ({ r with startTime: int(v: r.startTime) }))\r\n  |> group(columns: [\"testProfile\"])\r\n  |> max(column: \"startTime\")\r\n  |> group()\r\n  |> map(fn: (r) => ({ r with dashboard: strings.joinStr(arr: [\r\n      \"<a href=\\\"d/jmeter-test-results/jmeter-test-results?orgId=1&from=\",\r\n      string(v: int(v: r.startTime)),\"&to=\",\r\n      string(v: int(v: r.endTime)),\"&var-aggregation=60&var-sampleType=transaction&var-testId=\",\r\n      string(v: r.testId),\"&var-testProfile=\",string(v: r.testProfile),\"\\\">Dashboard</a>\"\r\n      ], \r\n      v: \"\") }))\r\n  |> keep(columns: [\"testId\", \"testProfile\", \"dashboard\", \"rfc\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Baselines",
      "transform": "table",
      "type": "table-old"
    }
  ],
  "refresh": "",
  "schemaVersion": 30,
  "style": "dark",
  "tags": [
    "main",
    "sitecore"
  ],
  "templating": {
    "list": [
      {
        "allValue": null,
        "auto": false,
        "current": {
          "selected": true,
          "text": "10",
          "value": "10"
        },
        "datasource": null,
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": "Aggregation",
        "multi": false,
        "name": "agr",
        "options": [
          {
            "selected": false,
            "text": "1",
            "value": "1"
          },
          {
            "selected": true,
            "text": "10",
            "value": "10"
          },
          {
            "selected": false,
            "text": "60",
            "value": "60"
          },
          {
            "selected": false,
            "text": "1800",
            "value": "1800"
          },
          {
            "selected": false,
            "text": "3600",
            "value": "3600"
          }
        ],
        "query": "1,10,60,1800,3600",
        "queryValue": "",
        "refresh": 0,
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "DCP",
          "value": "DCP"
        },
        "datasource": "InfluxDB",
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurementTagValues(\r\n  bucket: v.bucket,\r\n  measurement: \"tests\",\r\n  tag: \"testProfile\"\r\n)",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "testProfile",
        "multi": false,
        "name": "testProfile",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurementTagValues(\r\n  bucket: v.bucket,\r\n  measurement: \"tests\",\r\n  tag: \"testProfile\"\r\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "1m",
      "5m",
      "2h"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "utc",
  "title": "Main dashboard",
  "uid": "main-dashboard",
  "version": 2
}